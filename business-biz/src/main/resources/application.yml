server:
  port: 9982
spring:
  application:
    name: business-biz-service
  # nacos配置
  cloud:
    nacos:
      discovery:
        enabled: false
        server-addr: 127.0.0.1:8848 # nacos地址
        namespace: manage-biz
        username: manage-biz
        password: manage-biz
  # rabbitmq配置
  rabbitmq:
    enabled: false  # 关闭rabbitMQ配置
    addresses: 127.0.0.1:5672  # springboot配置rabbitmq地址
    username: guest # springboot配置rabbitmq账号
    password: guest # springboot配置rabbitmq密码
    connection-timeout: 1000
    listener:
      simple:
        concurrency: 1
        max-concurrency: 5
    senders:  # 本示例配置发送者信息
      test-direct: test-direct
      test-header: test-header
      test-topic: test-topic
      test-fanout: test-fanout
    receivers: # 本示例配置消费者信息
      test-direct-queue:
        queueName: test-direct-queue  # 队列名称
        exchange: test-direct  # 队列绑定交换机
        exchangeType: DIRECT   # 交换机类型DIRECT、HEADER、TOPIC、FANOUT
        routingKey: error, info  # routingKey，只有DIRECT和TOPIC有效
        acknowledgeMode: MANUAL  # 手动还是自动确认
      test-header-queue:
        queueName: test-header-queue
        exchange: test-header
        exchangeType: HEADER
        matchAll: true
        headers:  # headers信息，只有HEADER有效
          type: forqueue1
      test-topic-queue:
        queueName: test-topic-queue
        exchange: test-topic
        exchangeType: TOPIC
        routingKey: good.*
      test-fanout-queue:
        queueName: test-fanout-queue
        exchange: test-fanout
        exchangeType: FANOUT
  # mongoDB配置
  data:
    mongodb:
      database: commonFramework
      host: 127.0.0.1
      port: 27017
      config:
        minConnectionsPerHost: 5
        maxConnectionsPerHost: 20


# 对象存储minIO
oss:
  enabled: false  # 是否开启oss存储配置
  api: false  # 自动开启API接口
  endpoint: http://127.0.0.1:9005  # MinIO服务器的URL
  access-key: minioadmin      # 访问密钥
  secret-key: minioadmin      # 密钥密码
  bucket-name: works     # 默认的Bucket名称


